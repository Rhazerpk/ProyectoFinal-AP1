@page "/C_equipo"

@inject EquipoBLL equipoBll

<AuthorizeView context="Context">
<Authorized>
<EditForm Model="lista">
    <div class="card ">
        <div class="card-header">
            <h4>Consulta Equipo
                  <div class="oi oi-laptop"></div>
            </h4>
        </div>
        <div class="card-body">
            <form>
                <div class="input-group d-flex align-items-end">

                  <div class="form-group col-md-3">
                  <InputSelect class="form-select text-14" @bind-Value="Filtro">                
                        <option value="0" disabled selected>Seleccione un filtro</option>                   
                        <option value="0">Id</option>
                        <option value="1">Nombre</option>                          
                    </InputSelect>
                    </div>
               <div class="Form-group col-md-1"></div>
    
                   <div class="Form-group col-3" >
                        <label>Criterio</label>
                        <InputText class="form-control" @bind-Value="Criterio" placeholder="Ingrese el criterio de busqueda"  />
                    </div>
                    <button type="button" class="btn btn-primary" @onclick="Consultar">
                        <i class="oi oi-grid-four-up mr-2" /> Consultar
                    </button>          
                </div>
            <hr>
                <div class="row">

                     <div class="Form-group col-2" >
                        <span class="form-group ">Desde</span>
                        <InputDate @bind-Value="fechaDesde" class="form-control" />
                    </div>

                
                    <div class="Form-group col-2" >
                        <span class="form-group">Hasta</span>
                        <InputDate @bind-Value="fechaHasta" class="form-control"/>
                    </div>
                </div>
            </form>
        </div>
    
    
         <table class="table table-light table-striped table-bordered">
            <thead class="thead">
                <tr class="table">

                    <th>Id</th>
                    <th>Nombre</th>     
                    <th>Cantidad</th>  
                    <th>Costo / Unidad</th>  
                    <th>Precio / Venta</th>   
                    <th>ITBIS</th>          
                    <th>Fecha Registro</th>                   
                    <th>Ver</th>
                    
                </tr>
            </thead>
          <tbody>
            @if (lista.Count == 0)
            {
                <span>Vacío</span>
            }
            else
                @foreach (var item in lista)
                {
                    <tr>
                        <td>@item.EquipoId</td>
                        <td>@item.Nombre</td>
                        <td>@item.Cantidad</td>
                        <td>RD$ @item.Costo</td>
                        <td>RD$ @item.Precio</td>
                        <td>@item.ITBIS %</td>
                        <td>@item.FechaCreacion</td>                                          
                         <td><a class="btn btn-sm btn-outline-primary oi oi-eye" href="equipo/@item.EquipoId"></a>
                        </td>
                    </tr>             
                }  
            </tbody>         
        </table>
    </div> 
</EditForm>

</Authorized>
    <NotAuthorized>
        <div class="container-fluid">
            <div class="row justify-content-center">
                <div class="col-md-6 text-center">
                    <h1>Acceso no autorizado</h1>
                    <p>Para acceder a esta página, es necesario iniciar sesión con una cuenta autorizada.</p>
                    <a href="Identity/Account/Login"><button class="btn btn-primary">Iniciar sesión</button></a>
                </div>
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>
@code{
    
    #nullable disable 
    public string Filtro;
    public string Criterio;
    private DateOnly fechaDesde { get; set; } = new DateOnly(2010, 4, 10);
    private DateOnly fechaHasta { get; set; } = DateOnly.FromDateTime(DateTime.Now);
    public DateOnly Fecha { get; set; } 
    public List<Equipo> lista { get; set; } = new List<Equipo>();
    public Equipo equipos { get; set; } = new Equipo(); 


    protected override void OnInitialized()
    {
        Filtro = "0";
        lista = equipoBll.GetList(e => true);
    }
    private void Consultar()
    {
        lista = new List<Equipo>();
        equipos = new Equipo();

        if (Criterio != null)
        {
            switch (Filtro)
            {
                case "0": 
                    lista = equipoBll.GetList(e => e.EquipoId == int.Parse(Criterio)) ;  
                    break;
                case "1":
                    lista = equipoBll.GetList(p => p.Nombre.ToLower().Contains(Criterio.ToLower())) ;
                    break;
            }
        }
        else
        {
            
            lista = equipoBll.GetList(e => e.FechaCreacion >= fechaDesde && e.FechaCreacion <= fechaHasta);
        }
    }
}